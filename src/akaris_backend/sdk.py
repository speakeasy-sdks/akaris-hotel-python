"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from .hotel_availability import HotelAvailability
from .hotel_rules import HotelRules
from .precision_search_hotel import PrecisionSearchHotel
from .reservation_hotel import ReservationHotel
from .sdkconfiguration import SDKConfiguration
from .search_hotel import SearchHotel
from akaris_backend import utils
from akaris_backend.models import shared
from typing import Callable, Dict, Union

class AkarisBackend:
    hotel_availability: HotelAvailability
    reservation_hotel: ReservationHotel
    hotel_rules: HotelRules
    search_hotel: SearchHotel
    precision_search_hotel: PrecisionSearchHotel

    sdk_configuration: SDKConfiguration

    def __init__(self,
                 security: Union[shared.Security,Callable[[], shared.Security]] = None,
                 server_idx: int = None,
                 server_url: str = None,
                 url_params: Dict[str, str] = None,
                 client: requests_http.Session = None,
                 retry_config: utils.RetryConfig = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: Union[shared.Security,Callable[[], shared.Security]]
        :param server_idx: The index of the server to use for all operations
        :type server_idx: int
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: Dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session
        :param retry_config: The utils.RetryConfig to use globally
        :type retry_config: utils.RetryConfig
        """
        if client is None:
            client = requests_http.Session()
        
        if server_url is not None:
            if url_params is not None:
                server_url = utils.template_url(server_url, url_params)

        self.sdk_configuration = SDKConfiguration(client, security, server_url, server_idx, retry_config=retry_config)
       
        self._init_sdks()
    
    def _init_sdks(self):
        self.hotel_availability = HotelAvailability(self.sdk_configuration)
        self.reservation_hotel = ReservationHotel(self.sdk_configuration)
        self.hotel_rules = HotelRules(self.sdk_configuration)
        self.search_hotel = SearchHotel(self.sdk_configuration)
        self.precision_search_hotel = PrecisionSearchHotel(self.sdk_configuration)
    