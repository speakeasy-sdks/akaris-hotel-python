"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class MaximumAvailableRate:
    r"""Maximum Available Rate for this Property, including the authority who provided the rate if it is different from the PropertyInfo authority."""
    authority: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authority'), 'exclude': lambda f: f is None }})
    r"""Name of the authoritative system that provided this rate"""
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""An ISO 4217 alpha character code that specifies a money unit"""
    minor_unit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minorUnit'), 'exclude': lambda f: f is None }})
    r"""Minor units are a mechanism for expressing the relationship between a major currency unit and its corresponding minor currency unit."""
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    

