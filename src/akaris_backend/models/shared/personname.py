"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PersonName:
    at_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@type') }})
    surname: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Surname') }})
    r"""Family name, last name."""
    given: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Given'), 'exclude': lambda f: f is None }})
    r"""Given name, first name or names."""
    middle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Middle'), 'exclude': lambda f: f is None }})
    r"""The middle name of the person name."""
    prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Prefix'), 'exclude': lambda f: f is None }})
    r"""Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"""
    

