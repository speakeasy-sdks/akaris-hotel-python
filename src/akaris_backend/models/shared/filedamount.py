"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FiledAmount:
    r"""The base amount of a ticket price or net price that is filed in local currency"""
    code_authority: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codeAuthority') }})
    r"""Filed amount currency code authority"""
    decimal_place: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decimalPlace') }})
    r"""ISO 4217 standard has a different number of decimals"""
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""Filed amount currency code"""
    decimal_authority: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decimalAuthority'), 'exclude': lambda f: f is None }})
    r"""ISO 4217 standard decimal authority"""
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Filed amount value"""
    

