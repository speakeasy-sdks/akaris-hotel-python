"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .accountingid import AccountingID
from .documentoverridesid import DocumentOverridesID
from .formofpaymentid import FormOfPaymentID
from .paymentid import PaymentID
from .preferenceid import PreferenceID
from .primarycontactid import PrimaryContactID
from .receiptconfirmation import ReceiptConfirmation
from .reservationcommentid import ReservationCommentID
from .specialserviceid import SpecialServiceID
from .travelagency import TravelAgency
from .travelerid import TravelerID
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReservationBuild:
    at_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@type') }})
    traveler: List[TravelerID] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Traveler') }})
    accounting: Optional[AccountingID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Accounting'), 'exclude': lambda f: f is None }})
    document_overrides: Optional[List[DocumentOverridesID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentOverrides'), 'exclude': lambda f: f is None }})
    form_of_payment: Optional[List[FormOfPaymentID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FormOfPayment'), 'exclude': lambda f: f is None }})
    payment: Optional[List[PaymentID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Payment'), 'exclude': lambda f: f is None }})
    preference: Optional[List[PreferenceID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Preference'), 'exclude': lambda f: f is None }})
    primary_contact: Optional[List[PrimaryContactID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrimaryContact'), 'exclude': lambda f: f is None }})
    receipt_confirmation: Optional[ReceiptConfirmation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceiptConfirmation'), 'exclude': lambda f: f is None }})
    reservation_comment: Optional[List[ReservationCommentID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReservationComment'), 'exclude': lambda f: f is None }})
    special_service: Optional[List[SpecialServiceID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpecialService'), 'exclude': lambda f: f is None }})
    travel_agency: Optional[TravelAgency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TravelAgency'), 'exclude': lambda f: f is None }})
    

