"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DisplaySequence:
    offer_ref: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OfferRef') }})
    r"""Offer reference"""
    display_sequence: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displaySequence') }})
    r"""The sequence the products are to be displayed for sequential date ordering"""
    at_type: Optional[str] = dataclasses.field(default='DisplaySequence', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@type'), 'exclude': lambda f: f is None }})
    product_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductRef'), 'exclude': lambda f: f is None }})
    r"""Product reference. If blank, display sequence applies to all products within the Offer."""
    sequence: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sequence'), 'exclude': lambda f: f is None }})
    r"""Segment sequence, if blank, display sequence applies to all segments within the product"""
    

