"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import hotelaggregatorenum as shared_hotelaggregatorenum
from ..shared import propertykey as shared_propertykey
from ..shared import ratecandidate as shared_ratecandidate
from ..shared import roomstaycandidates as shared_roomstaycandidates
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OfferQueryHospitalityRequest:
    at_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@type') }})
    checkin_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkinDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    checkout_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkoutDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    number_of_guests: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfGuests') }})
    r"""The number of guests"""
    property_key: shared_propertykey.PropertyKey = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PropertyKey') }})
    booking_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bookingCode'), 'exclude': lambda f: f is None }})
    r"""The booking code"""
    hotel_aggregator: Optional[shared_hotelaggregatorenum.HotelAggregatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HotelAggregator'), 'exclude': lambda f: f is None }})
    rate_candidate: Optional[shared_ratecandidate.RateCandidate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RateCandidate'), 'exclude': lambda f: f is None }})
    requested_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedCurrency'), 'exclude': lambda f: f is None }})
    r"""You can use requested currency to request conversion rate information. The response will return the currencyRateConversion object which will contain conversion rate of the requested currency."""
    room_stay_candidates: Optional[shared_roomstaycandidates.RoomStayCandidates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoomStayCandidates'), 'exclude': lambda f: f is None }})
    stored_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storedAmount'), 'exclude': lambda f: f is None }})
    r"""stored amount"""
    stored_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storedCurrency'), 'exclude': lambda f: f is None }})
    r"""stored currency"""
    

