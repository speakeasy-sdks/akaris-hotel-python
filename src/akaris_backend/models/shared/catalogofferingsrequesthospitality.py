"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .currencyamount import CurrencyAmount
from .dateordatewindows import DateOrDateWindows
from .hotelsearchcriterion import HotelSearchCriterion
from .searchcontrolconsolechannelid import SearchControlConsoleChannelID
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogOfferingsRequestHospitality:
    stay_dates: DateOrDateWindows = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StayDates') }})
    r"""Indicates the expiry date."""
    at_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@type'), 'exclude': lambda f: f is None }})
    hotel_search_criterion: Optional[HotelSearchCriterion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HotelSearchCriterion'), 'exclude': lambda f: f is None }})
    maximum_amount: Optional[CurrencyAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumAmount'), 'exclude': lambda f: f is None }})
    r"""A monetary amount, up to 4 decimal places. Decimal place needs to be included."""
    minimum_amount: Optional[CurrencyAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumAmount'), 'exclude': lambda f: f is None }})
    r"""A monetary amount, up to 4 decimal places. Decimal place needs to be included."""
    search_control_console_channel_id: Optional[SearchControlConsoleChannelID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SearchControlConsoleChannelID'), 'exclude': lambda f: f is None }})
    max_response_wait_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxResponseWaitTime'), 'exclude': lambda f: f is None }})
    r"""Maximum time (in milliseconds) to wait for provider responses before returning a response to the consumer of this service"""
    requested_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedCurrency'), 'exclude': lambda f: f is None }})
    r"""You can use requested currency to request conversion rate information. The response will return the currencyRateConversion object which will contain conversion rate of the requested currency."""
    verbose_response_ind: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verboseResponseInd'), 'exclude': lambda f: f is None }})
    r"""Used to specify that a verbose response is to be returned.  Verbose responses repeat the Property information in each Product and do not return the reference list."""
    

