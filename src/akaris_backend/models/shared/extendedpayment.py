"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ExtendedPayment:
    r"""Note this field is deprecated in Payment schema and should be passed in FormOfPaymentPaymentCardExtendPayment schema"""
    number_of_installments: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfInstallments') }})
    r"""The number of installment payments to be charged by the payment card provider"""
    first_installment: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstInstallment'), 'exclude': lambda f: f is None }})
    r"""For Pagos Parceledos, specify the first installment amount. This will be the same currency as the payment"""
    otato_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OTATOCode'), 'exclude': lambda f: f is None }})
    r"""For Pagos Parceledos the OTATOCode"""
    remaining_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RemainingAmount'), 'exclude': lambda f: f is None }})
    r"""For Pagos Parceledos, specify the remaining amount to be charged that will be spread across the number of installments. This will be the same currency as the payment"""
    

