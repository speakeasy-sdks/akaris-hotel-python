"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import currencyamount as shared_currencyamount
from ..shared import documentnumber as shared_documentnumber
from ..shared import tax as shared_tax
from akaris_backend import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AgencyServiceFee:
    at_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@type') }})
    amount: shared_currencyamount.CurrencyAmount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Amount') }})
    r"""A monetary amount, up to 4 decimal places. Decimal place needs to be included."""
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""The description of the service fee"""
    expiry_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExpiryDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'exclude': lambda f: f is None }})
    r"""The service fee expiry date. Once expiry date has been reached, the service fee information will only be stored in the ReservationReceipt"""
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique id for this object within a message"""
    offer_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OfferRef'), 'exclude': lambda f: f is None }})
    r"""Reference to an Offer within the Reservation that this service fee applies to"""
    related_document_number: Optional[shared_documentnumber.DocumentNumber] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RelatedDocumentNumber'), 'exclude': lambda f: f is None }})
    tax: Optional[List[shared_tax.Tax]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tax'), 'exclude': lambda f: f is None }})
    traveler_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TravelerRef'), 'exclude': lambda f: f is None }})
    r"""Reference to a Traveler within the Reservation that this service fee applies to"""
    

